[{"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/index.js":"1","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/AppRouter.js":"2","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/GameNotFound.js":"3","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/firebase.js":"4","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/classes/CMSApi.js":"5","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/SignUpPage.js":"6","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/contexts/AuthContext.js":"7","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/GameSetup.js":"8","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/LoginPage.js":"9","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/PrivateRoute.js":"10","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/AnonCreate.js":"11","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/contexts/GameContext.js":"12","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/Game.js":"13","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostBase.js":"14","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostDashboard.js":"15","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostGames.js":"16","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/theme.js":"17","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/Title.js":"18","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/Block.js":"19","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostOfficiate.js":"20","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/contexts/GameHostContext.js":"21","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/PickTeamStep.js":"22","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/GameManager.js":"23"},{"size":225,"mtime":1607459056701,"results":"24","hashOfConfig":"25"},{"size":1321,"mtime":1608343180269,"results":"26","hashOfConfig":"25"},{"size":108,"mtime":1607378811106,"results":"27","hashOfConfig":"25"},{"size":705,"mtime":1607568576167,"results":"28","hashOfConfig":"25"},{"size":2332,"mtime":1608156997294,"results":"29","hashOfConfig":"25"},{"size":2349,"mtime":1607547093851,"results":"30","hashOfConfig":"25"},{"size":1065,"mtime":1608175555693,"results":"31","hashOfConfig":"25"},{"size":5446,"mtime":1608351363039,"results":"32","hashOfConfig":"25"},{"size":1905,"mtime":1607976628024,"results":"33","hashOfConfig":"25"},{"size":432,"mtime":1608343097373,"results":"34","hashOfConfig":"25"},{"size":816,"mtime":1607568876744,"results":"35","hashOfConfig":"25"},{"size":3920,"mtime":1608002022947,"results":"36","hashOfConfig":"25"},{"size":3045,"mtime":1608002827231,"results":"37","hashOfConfig":"25"},{"size":8558,"mtime":1608151853886,"results":"38","hashOfConfig":"25"},{"size":616,"mtime":1608078508595,"results":"39","hashOfConfig":"25"},{"size":2201,"mtime":1608173232653,"results":"40","hashOfConfig":"25"},{"size":648,"mtime":1608350462076,"results":"41","hashOfConfig":"25"},{"size":342,"mtime":1608149302568,"results":"42","hashOfConfig":"25"},{"size":613,"mtime":1608343371934,"results":"43","hashOfConfig":"25"},{"size":503,"mtime":1608342617711,"results":"44","hashOfConfig":"25"},{"size":4026,"mtime":1608351218585,"results":"45","hashOfConfig":"25"},{"size":5562,"mtime":1608341897492,"results":"46","hashOfConfig":"25"},{"size":1635,"mtime":1608350619829,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"2n0jtt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/index.js",[],["106","107"],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/AppRouter.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/GameNotFound.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/firebase.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/classes/CMSApi.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/SignUpPage.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/contexts/AuthContext.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/GameSetup.js",["108","109"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { sharedStyles } from \"../theme\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Block from \"./Block\";\nimport PickTeamStep from \"./PickTeamStep\";\nimport { useGameHost } from \"../contexts/GameHostContext\";\n\nconst useStyles = makeStyles(theme => ({\n  ...sharedStyles(theme),\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  chip: {\n    margin: \"0 5px 0\"\n  }\n}));\n\nexport const SetupStep = ({\n  label,\n  nextText,\n  nextHandler,\n  children,\n  handleReset,\n  ...rest\n}) => {\n  const classes = useStyles();\n  return (\n    <Step {...rest}>\n      <StepLabel>{label}</StepLabel>\n      <StepContent>\n        {children}\n        <div className={classes.actionsContainer}>\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={nextHandler}>\n              {nextText}\n            </Button>\n            {handleReset && (\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            )}\n          </div>\n        </div>\n      </StepContent>\n    </Step>\n  );\n};\n\nconst BeginGameStep = ({ ...rest }) => {\n  const { game, stage, setStage } = useGameHost();\n\n  const nextHandler = () => {\n    // change stage to collecting\n    setStage(\"collecting\");\n  };\n\n  return (\n    <SetupStep\n      label=\"Open Game\"\n      nextText=\"Open Game\"\n      nextHandler={nextHandler}\n      {...rest}\n    >\n      <Typography>\n        Opening the game will allow players to enter their name and sign in.\n      </Typography>\n      <Typography>\n        <strong>{`${process.env.REACT_APP_SITE_URL}/play/${game.id}`}</strong>\n      </Typography>\n    </SetupStep>\n  );\n};\n\nconst PlayerCollectStep = ({ nextStep, setNumberOfTeams, ...rest }) => {\n  const classes = useStyles();\n\n  const { players, setStage, gameURL } = useGameHost();\n\n  const setNumberOfTeamsRef = useRef();\n\n  const nextHandler = () => {\n    setNumberOfTeams(setNumberOfTeamsRef.current.value);\n    // change stage in firebase\n    setStage(\"dividing\");\n  };\n\n  return (\n    <SetupStep\n      label=\"Collect Players\"\n      nextText=\"Lock Game\"\n      nextHandler={nextHandler}\n      {...rest}\n    >\n      <Typography>\n        Checked in players will populate here when they go to{\" \"}\n        <strong>{gameURL}</strong> and enter their name.\n      </Typography>\n      <div className={classes.teamGroup}>\n        {players &&\n          Object.keys(players).map(id => (\n            <Chip\n              key={id}\n              avatar={<Avatar>{players[id].name[0]}</Avatar>}\n              label={players[id].name}\n              className={classes.chip}\n            />\n          ))}\n      </div>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          id=\"filled-basic\"\n          label=\"Number of Teams\"\n          type=\"number\"\n          variant=\"filled\"\n          default={1}\n          inputProps={{ ref: setNumberOfTeamsRef }}\n        />\n      </form>\n    </SetupStep>\n  );\n};\n\nconst FinishSetupStep = ({ ...rest }) => {\n  const { setStage, startGame } = useGameHost();\n\n  const handleReset = () => {\n    setStage(\"dormant\");\n  };\n\n  return (\n    <SetupStep\n      label=\"Review\"\n      nextText=\"Let the Games Begin!\"\n      nextHandler={startGame}\n      handleReset={handleReset}\n      {...rest}\n    >\n      <Typography>\n        You are now ready to begin the game. Please make sure that all of your\n        players have joined their team's breakout room and that each team leader\n        is able to share their screen so that the team can work together.\n      </Typography>\n    </SetupStep>\n  );\n};\n\nconst GameSetup = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState();\n  const [numberOfTeams, setNumberOfTeams] = useState(1);\n\n  const { stage } = useGameHost();\n\n  // FIXME: hardcoded and that makes me feel icky. Better way?\n  const mapStageToStep = stage =>\n    ({ dormant: 0, collecting: 1, dividing: 2, ready: 3, playing: Infinity }[\n      stage\n    ]);\n\n  useEffect(() => {\n    const currentStage = mapStageToStep(stage);\n    setActiveStep(currentStage >= 0 ? currentStage : -1);\n  }, [stage]);\n\n  // const nextStep = (done = false) => {\n  //   // logic based on stage\n  //   setActiveStep(prevActiveStep => prevActiveStep + 1);\n  //   if (done) {\n  //     setComplete(true);\n  //   }\n  // };\n\n  return (\n    <Block>\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          <BeginGameStep />\n          <PlayerCollectStep setNumberOfTeams={setNumberOfTeams} />\n          <PickTeamStep numberOfTeams={numberOfTeams} />\n          <FinishSetupStep />\n        </Stepper>\n      </div>\n    </Block>\n  );\n};\n\nexport default GameSetup;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/LoginPage.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/PrivateRoute.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/AnonCreate.js",[],["110","111"],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/contexts/GameContext.js",["112"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport CMSApi from \"../classes/CMSApi\";\nimport db, { auth, rdb } from \"../firebase\";\n\nconst GameContext = React.createContext();\n\nfunction GameProvider({ children }) {\n  const [currentPlayer, setCurrentPlayer] = useState();\n  const [loading, setLoading] = useState(true);\n  const [game, setGame] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [stage, setStage] = useState(\"\");\n\n  let { gameId } = useParams();\n  const baseRef = `/games/${gameId}`;\n\n  // Anonymously authenticate user and set name\n  const checkIn = () => auth.signInAnonymously();\n\n  useEffect(() => {\n    const initGame = async () => {\n      let gameData = await findGame(gameId);\n      await findRoom(gameData.room);\n      initRDBListeners();\n      setLoading(false);\n    };\n    initGame();\n    const initPlayer = async () => {\n      const unsubscribe = auth.onAuthStateChanged(player => {\n        if (player) {\n          console.log(\"already in\");\n          return setCurrentPlayer(player);\n        }\n        console.log(\"checking in\");\n        checkIn();\n      });\n      return unsubscribe;\n    };\n    return initPlayer();\n  }, []);\n\n  const findHost = async id => {\n    const foundHost = await db\n      .collection(\"users\")\n      .doc(id)\n      .get();\n    if (!foundHost.exists) {\n      return setError(`Host with id ${id} not found`);\n    }\n    return foundHost.data();\n  };\n\n  const findGame = async id => {\n    const foundGame = await db\n      .collection(\"games\")\n      .doc(id)\n      .get();\n    if (!foundGame.exists) {\n      return setError(`Game with id ${id} not found`);\n    }\n    // find host\n    const host = await findHost(foundGame.data().host.id);\n    const gameData = { ...foundGame.data(), host };\n    setGame(gameData);\n    console.log(\"game data\", gameData);\n    return gameData;\n  };\n\n  const findRoom = async slug => {\n    try {\n      let foundRoom = await CMSApi.findRoom(slug);\n      setRoom(foundRoom);\n      return foundRoom;\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  const initRDBListeners = ledger => {\n    // teams listener\n    const unsubscribeTeams = rdb\n      .ref(`${baseRef}/teams`)\n      .on(\"value\", snapshot => {\n        console.log(\"LISTENING ON /teams\", snapshot.val());\n      });\n    // players listener\n    const unsubscribePlayers = rdb\n      .ref(`${baseRef}/players`)\n      .on(\"value\", snapshot => {\n        console.log(\"LISTENING ON /players\", snapshot.val());\n      });\n    // startTime listener\n    const unsubscribeStartTime = rdb\n      .ref(`${baseRef}/teams`)\n      .on(\"value\", snapshot => {\n        console.log(\"LISTENING ON /startTime\", snapshot.val());\n      });\n    // stage listener\n    const unsubscribeStage = rdb\n      .ref(`${baseRef}/stage`)\n      .on(\"value\", snapshot => {\n        setStage(snapshot.val());\n        console.log(\"LISTENING ON /stage\", snapshot.val());\n      });\n    // return unsubscribers\n    return {\n      unsubscribeTeams,\n      unsubscribePlayers,\n      unsubscribeStartTime,\n      unsubscribeStage\n    };\n  };\n\n  // Logout anon user\n  // const checkOut = () => auth.signOut();\n\n  const enterPlayer = async displayName => {\n    await currentPlayer.updateProfile({ displayName });\n    const unsubscribe = auth.onAuthStateChanged(player => {\n      setCurrentPlayer(player);\n      // enter user into ledger\n      rdb.ref(`${baseRef}/players/${player.uid}`).set({\n        name: player.displayName\n      });\n    });\n    unsubscribe();\n  };\n\n  const value = {\n    currentPlayer,\n    game,\n    room,\n    stage,\n    enterPlayer\n  };\n\n  return (\n    <GameContext.Provider value={value}>\n      {error && <p>{error}</p>}\n      {!loading && game && room && children}\n    </GameContext.Provider>\n  );\n}\n\nexport const useGame = () => useContext(GameContext);\nexport default GameProvider;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/Game.js",["113","114","115","116","117"],"import { React, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport moment from \"moment\";\n\nimport { useGame } from \"../contexts/GameContext\";\n// import CMSApi from \"../classes/CMSApi\";\n\nconst Invitation = ({ game, room, msg }) => (\n  <>\n    <p>You're Invited to</p>\n    <p>{room && room.title}</p>\n    <p>Hosted by {game && game.host.name}</p>\n    {room && <img alt=\"\" src={room.coverImage(\"thumbnail\")} />}\n    <p>\n      {game &&\n        moment\n          .unix(game.scheduledTime.seconds)\n          .format(\"MMMM Do, YYYY [at] h:mm a\")}\n    </p>\n    <Countdown\n      date={moment.unix(game.scheduledTime.seconds).toDate()}\n      renderer={({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n          return <p>done</p>;\n        } else {\n          return (\n            <p>\n              {zeroPad(days)} : {zeroPad(hours)} : {zeroPad(minutes)} :{\" \"}\n              {zeroPad(seconds)}\n            </p>\n          );\n        }\n      }}\n    />\n  </>\n);\n\nconst Enter = ({ currentPlayer, enterPlayer, setEntered }) => {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    if (currentPlayer.displayName) {\n      setName(currentPlayer.displayName);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await enterPlayer(name);\n    setEntered(true);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} action=\"\">\n      <label>Please enter your name</label>\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n        required\n        name=\"player-name\"\n        type=\"text\"\n      />\n    </form>\n  );\n};\n\nconst Waiting = () => <p>Waiting for Host</p>;\n\nconst Game = props => {\n  let { game, room, stage, currentPlayer, enterPlayer } = useGame();\n  let [entered, setEntered] = useState(false);\n  let [screen, setScreen] = useState(\"\");\n\n  useEffect(() => {\n    // determine stage of local app\n    switch (stage) {\n      case \"dormant\":\n        if (moment().isAfter(moment.unix(game.scheduledTime.seconds))) {\n          // scheduled time has passed, ask for name\n          return setScreen(\"invite\");\n        }\n        if (entered === true) {\n          return setScreen(\"waiting\");\n        }\n        return setScreen(\"enter\");\n      case \"collecting\":\n        if (entered === true) {\n          // player already chose name\n          return setScreen(\"waiting\");\n        }\n        return setScreen(\"enter\");\n      default:\n        return setScreen(\"waiting\");\n    }\n  }, [stage]);\n\n  switch (screen) {\n    case \"invite\":\n      return <Invitation room={room} game={game} setScreen={setScreen} />;\n    case \"enter\":\n      return (\n        <Enter\n          room={room}\n          game={game}\n          currentPlayer={currentPlayer}\n          enterPlayer={enterPlayer}\n          setEntered={setEntered}\n        />\n      );\n    case \"waiting\":\n      return <Waiting />;\n\n    default:\n      return <Waiting />;\n  }\n};\n\nexport default Game;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostBase.js",["118"],"import React, { useState } from \"react\";\nimport { Link as ReactLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport SportsEsports from \"@material-ui/icons/SportsEsports\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { sharedStyles } from \"../theme\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Compliments of \"}\n      <Link\n        style={{ fontWeight: \"bold\" }}\n        color=\"inherit\"\n        href=\"https://julianhernandez.me\"\n        target=\"_blank\"\n      >\n        Brother App\n      </Link>{\" \"}\n      {\"2020.\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\n// const styles = theme => ({\n//   // ...sharedStyles(theme),\n//   root: {\n//     display: \"flex\"\n//   },\n//   toolbar: {\n//     paddingRight: 24 // keep right padding when drawer closed\n//   },\n//   toolbarIcon: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"flex-end\",\n//     padding: \"0 8px\",\n//     ...theme.mixins.toolbar\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     transition: theme.transitions.create([\"width\", \"margin\"], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen\n//     })\n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create([\"width\", \"margin\"], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen\n//     })\n//   },\n//   menuButton: {\n//     marginRight: 36\n//   },\n//   menuButtonHidden: {\n//     display: \"none\"\n//   },\n//   title: {\n//     flexGrow: 1\n//   },\n//   drawerPaper: {\n//     position: \"relative\",\n//     whiteSpace: \"nowrap\",\n//     width: drawerWidth,\n//     transition: theme.transitions.create(\"width\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen\n//     })\n//   },\n//   drawerPaperClose: {\n//     overflowX: \"hidden\",\n//     transition: theme.transitions.create(\"width\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen\n//     }),\n//     width: theme.spacing(7),\n//     [theme.breakpoints.up(\"sm\")]: {\n//       width: theme.spacing(9)\n//     }\n//   },\n//   appBarSpacer: theme.mixins.toolbar,\n//   content: {\n//     flexGrow: 1,\n//     height: \"100vh\",\n//     overflow: \"auto\"\n//   },\n//   container: {\n//     paddingTop: theme.spacing(4),\n//     paddingBottom: theme.spacing(4)\n//   },\n//   // paper: {\n//   //   padding: theme.spacing(2),\n//   //   display: \"flex\",\n//   //   overflow: \"auto\",\n//   //   flexDirection: \"column\"\n//   // },\n//   fixedHeight: {\n//     height: 240\n//   }\n// });\n\nconst useStyles = makeStyles(theme => ({\n  ...sharedStyles(theme),\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  // paper: {\n  //   padding: theme.spacing(2),\n  //   display: \"flex\",\n  //   overflow: \"auto\",\n  //   flexDirection: \"column\"\n  // },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nconst Dashboard = ({ children }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>{mainListItems}</List> */}\n        <List>\n          <div>\n            <ReactLink to=\"/dashboard\">\n              <ListItem component=\"a\" button>\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItem>\n            </ReactLink>\n            <ReactLink to=\"/games\">\n              <ListItem button>\n                <ListItemIcon>\n                  <SportsEsports />\n                </ListItemIcon>\n                <ListItemText primary=\"Games\" />\n              </ListItem>\n            </ReactLink>\n          </div>\n        </List>\n        <Divider />\n        <List>\n          <div>\n            <ReactLink to=\"/account\">\n              <ListItem component=\"a\" button>\n                <ListItemIcon>\n                  <SettingsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Account\" />\n              </ListItem>\n            </ReactLink>\n          </div>\n        </List>\n        {/* <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {children}\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostDashboard.js",["119","120","121","122"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport HostBase from \"./HostBase\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport GameSetup from \"./GameSetup\";\n\nconst HostDashboard = ({}) => {\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      history.push(\"/\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      <HostBase>\n        <button onClick={handleLogout}>Logout</button>\n      </HostBase>\n    </>\n  );\n};\n\nexport default HostDashboard;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostGames.js",["123","124","125","126","127","128"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nimport CMSApi from \"../classes/CMSApi\";\nimport Title from \"./Title\";\nimport db from \"../firebase\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport HostBase, { useStyles } from \"./HostBase\";\nimport GameSetup from \"./GameSetup\";\nimport Block from \"./Block\";\n\nconst GameList = () => {\n  const [games, setGames] = useState([]);\n  const { currentUser } = useAuth();\n\n  // OPTIMIZE: get room names another way,\n  // too many calls to CMS\n  const getGames = async () => {\n    const hostRef = db.collection(\"users\").doc(currentUser.uid);\n    const gameSnapshots = await db\n      .collection(\"games\")\n      .where(\"host\", \"==\", hostRef)\n      .get();\n    const gameObjs = [];\n    gameSnapshots.forEach(doc => {\n      const gameData = { ...doc.data(), id: doc.id };\n      gameObjs.push(gameData);\n    });\n    const roomNames = {};\n    // get room names\n    for (var i = 0; i < gameObjs.length; i++) {\n      const slug = gameObjs[i].room;\n      if (!roomNames[slug]) {\n        const res = await CMSApi.getRoom(slug, [\"title\"]);\n        roomNames[slug] = res.title.rendered;\n        console.log(\"name\", res.title.rendered);\n      }\n      gameObjs[i].room = roomNames[slug];\n    }\n    console.log(gameObjs);\n    setGames(gameObjs);\n  };\n\n  useEffect(() => {\n    getGames();\n  }, []);\n\n  return (\n    // OPTIMIZE: add edit and delete button\n    <List>\n      {games.map(game => (\n        <ListItem\n          key={game.id}\n          component={Link}\n          to={`/games/${game.id}`}\n          button\n        >\n          <ListItemText\n            primary={game.room}\n            secondary={moment\n              .unix(game.scheduledTime.seconds)\n              .format(\"MMMM Do, YYYY\")}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst HostGame = ({}) => (\n  <HostBase>\n    <Grid item xs={12}>\n      <GameList />\n    </Grid>\n  </HostBase>\n);\n\nexport default HostGame;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/theme.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/Title.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/Block.js",[],"/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/HostOfficiate.js",["129","130"],"import React, { useContext } from \"react\";\n\nimport HostBase from \"./HostBase\";\nimport GameSetup from \"./GameSetup\";\nimport GameManager from \"./GameManager\";\nimport GameHostContext, { useGameHost } from \"../contexts/GameHostContext\";\n\nconst HostOfficiate = ({}) => {\n  const { stage } = useGameHost();\n\n  return (\n    <GameHostContext>\n      <HostBase>\n        <GameSetup />\n        {stage === \"playing\" && <GameManager />}\n      </HostBase>\n    </GameHostContext>\n  );\n};\n\nexport default HostOfficiate;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/contexts/GameHostContext.js",["131","132","133"],"import React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport db, { rdb } from \"../firebase\";\nconst GameHostContext = React.createContext();\n\nconst GameHostProvider = ({ children }) => {\n  const [game, setGame] = useState();\n  const [error, setError] = useState();\n  // const [room, setRoom] = useState();\n  const [players, setPlayers] = useState({});\n  const [teams, setTeams] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [stage, setStage] = useState(\"\");\n\n  const { gameId } = useParams();\n\n  const gameURL = `${process.env.REACT_APP_SITE_URL}/play/${gameId}`;\n\n  const baseRef = `games/${gameId}`;\n  const playersRef = rdb.ref(`${baseRef}/players`);\n  const teamsRef = rdb.ref(`${baseRef}/teams`);\n  const stageRef = rdb.ref(`${baseRef}/stage`);\n  const startTimeRef = rdb.ref(`${baseRef}/startTime`);\n\n  const initPlayerListeners = () => {\n    const unsubscribeAdd = playersRef.on(\"child_added\", snapshot =>\n      setPlayers(prevState => ({\n        ...prevState,\n        [snapshot.getRef().getKey()]: snapshot.val()\n      }))\n    );\n    const unsubscribeRemove = playersRef.on(\"child_removed\", snapshot =>\n      setPlayers(prevState => {\n        const mod = { ...prevState };\n        delete mod[snapshot.getRef().getKey()];\n        return { ...mod };\n      })\n    );\n    return { unsubscribeAdd, unsubscribeRemove };\n  };\n\n  const initStageListener = () => {\n    return stageRef.on(\"value\", snapshot => {\n      if (snapshot.val() !== stage) {\n        setStage(snapshot.val());\n      }\n    });\n  };\n\n  const initTeamListener = () => {\n    // get current teams if they exist\n    teamsRef.once(\"value\", snapshot => {\n      // snapshot.exists() ? setTeams(snapshot.val()) : null\n      console.log(\"teams\", snapshot.exists());\n    });\n    // return teamsRef.on(\"child_changed\", snapshot =>\n    //   setTeams(prevState => ({\n    //     ...prevState,\n    //     [snapshot.getRef().getKey()]: snapshot.val()\n    //   }))\n    // );\n  };\n\n  const initGame = async () => {\n    // find game in firestore\n    const foundGame = await db\n      .collection(\"games\")\n      .doc(gameId)\n      .get();\n    if (!foundGame) {\n      return setError(`Game with id ${gameId} not found.`);\n    }\n    setGame({ ...foundGame.data(), id: foundGame.id });\n    // find ledger or create it\n    let ledger = await rdb.ref(baseRef).once(\"value\");\n    if (!ledger.exists()) {\n      ledger = await rdb.ref(baseRef).set({\n        stage: \"dormant\",\n        players: {},\n        teams: {},\n        startTime: null\n      });\n    }\n    await initPlayerListeners();\n    initStageListener();\n    initTeamListener();\n    setLoading(false);\n  };\n\n  const startGame = () => {\n    setStage(\"playing\");\n    // set start time\n    startTimeRef.set(moment().unix());\n    console.log(\"GAME STARTED!\");\n  };\n\n  const writeTeams = async () => {\n    const updates = {};\n    const teamObj = {};\n    const teamIds = Object.keys(teams);\n    for (let i = 0; i < teamIds.length; i++) {\n      const teamId = teamIds[i];\n      const team = teams[teamId];\n      team.forEach(player => {\n        updates[`${baseRef}/players/${player.id}/team`] = teamId;\n        if (player.leader === true) {\n          teamObj[teamId] = { leader: player.id };\n        }\n      });\n    }\n    await Promise.all([\n      rdb.ref().update(updates),\n      rdb.ref(`${baseRef}/teams`).set(teamObj)\n    ]);\n  };\n\n  useEffect(() => {\n    initGame();\n  }, []);\n\n  useEffect(() => {\n    // dont set if empty\n    if (stage !== \"\") {\n      stageRef.set(stage);\n    }\n  }, [stage]);\n\n  const value = {\n    players,\n    teams,\n    setTeams,\n    writeTeams,\n    game,\n    stage,\n    setStage,\n    startGame,\n    baseRef,\n    teamsRef,\n    gameURL\n  };\n\n  return (\n    <GameHostContext.Provider value={value}>\n      {error ? <p>{error}</p> : !loading && children}\n    </GameHostContext.Provider>\n  );\n};\n\nexport const useGameHost = () => useContext(GameHostContext);\nexport default GameHostProvider;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/PickTeamStep.js",["134","135"],"import React, { useEffect, useState } from \"react\";\nimport useDrop from \"react-dnd\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { nanoid } from \"nanoid\";\nimport _ from \"lodash\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { SetupStep } from \"./GameSetup\";\nimport { useGameHost } from \"../contexts/GameHostContext\";\n\nconst useStyles = makeStyles(theme => ({\n  teamGroup: {\n    background: \"#eee\",\n    padding: \"20px\",\n    borderRadius: \"10px\",\n    margin: \"10px 0\"\n  },\n  chipContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: \"5px\"\n  }\n}));\n\nconst PickTeamStep = ({ numberOfTeams, ...rest }) => {\n  const classes = useStyles();\n\n  const { teams, setTeams, players, writeTeams, setStage } = useGameHost();\n  // players = { adfasdf : {name: Julian}, sdhasdf: {name: Levy} }\n\n  const [unassignedPlayers, setUnassignedPlayers] = useState([]);\n\n  // const [teams, setTeams] = useState({});\n\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    let teamsObj = {};\n    for (let i = 0; i < numberOfTeams; i++) {\n      teamsObj[nanoid()] = [];\n    }\n    setTeams(teamsObj);\n  }, [numberOfTeams]);\n\n  useEffect(() => {\n    const flattenedPlayers = Object.keys(players).map(id => ({\n      id,\n      name: players[id].name\n    }));\n    setUnassignedPlayers(prevState => [...flattenedPlayers]);\n  }, [players]);\n\n  const nextHandler = async () => {\n    if (unassignedPlayers.length) {\n      return setError(`Please assign all players to a team.`);\n    }\n    // loop through all teams to check for team leader\n    const teamObjs = Object.values(teams);\n    for (let i = 0; i < teamObjs.length; i++) {\n      const leader = _.find(teamObjs[i], [\"leader\", true]);\n      if (!leader) {\n        return setError(\"Please assign a team leader to all teams.\");\n      }\n    }\n    // store teams in ledger\n    await writeTeams();\n    setStage(\"ready\");\n  };\n\n  const handleUnassign = (playerId, teamId) => {\n    setTeams(prevState => ({\n      ...prevState,\n      [teamId]: prevState[teamId].filter(({ id }) => id !== playerId)\n    }));\n    setUnassignedPlayers(prevState =>\n      prevState.concat({ id: playerId, name: players[playerId].name })\n    );\n  };\n\n  const handleAssign = (playerId, teamId) => {\n    setUnassignedPlayers(prevState =>\n      prevState.filter(({ id }) => id !== playerId)\n    );\n    // assign to correct team\n    setTeams(prevState => ({\n      ...prevState,\n      [teamId]: prevState[teamId].concat({\n        id: playerId,\n        name: players[playerId].name\n      })\n    }));\n  };\n\n  const assignLeader = (playerId, teamId) => {\n    setTeams(prevState => ({\n      ...prevState,\n      [teamId]: prevState[teamId].map(player => {\n        if (player.id === playerId) {\n          return { ...player, leader: true };\n        }\n        delete player.leader;\n        return player;\n      })\n    }));\n  };\n\n  return (\n    <SetupStep\n      label=\"Divide Teams\"\n      nextText=\"Lock Teams\"\n      nextHandler={nextHandler}\n      {...rest}\n    >\n      <div className={classes.teamGroup}>\n        <p>Unassigned Players</p>\n        <div className={classes.chipContainer}>\n          {unassignedPlayers.map(({ name, id }) => (\n            <Chip\n              key={id}\n              avatar={<Avatar>{name[0]}</Avatar>}\n              label={name}\n              className={classes.chip}\n            />\n          ))}\n        </div>\n      </div>\n      <Grid container spacing={3}>\n        {Object.keys(teams).map((teamId, index) => (\n          <Grid key={teamId} item xs>\n            <div className={classes.teamGroup}>\n              <p>{`Team ${index + 1}`}</p>\n              <div className={classes.chipContainer}>\n                {teams[teamId].map(player => (\n                  <Chip\n                    key={player.id}\n                    icon={player.leader && <ScreenShareIcon />}\n                    avatar={!player.leader && <Avatar>{player.name[0]}</Avatar>}\n                    label={player.name}\n                    className={classes.chip}\n                    onClick={() => assignLeader(player.id, teamId)}\n                    onDelete={() => handleUnassign(player.id, teamId)}\n                    color={player.leader && \"secondary\"}\n                  />\n                ))}\n              </div>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                  const input = e.target[`value-${teamId}`];\n                  const playerId = input.value;\n                  // check if existing player\n                  if (!players[playerId]) return;\n                  handleAssign(playerId, teamId);\n                  input.value = \"\";\n                }}\n              >\n                <input list=\"unassigned\" name={`value-${teamId}`} />\n                <datalist id=\"unassigned\">\n                  {unassignedPlayers.map(({ id, name }) => (\n                    <option key={id} value={id}>\n                      {name}\n                    </option>\n                  ))}\n                </datalist>\n                <input type=\"submit\" value=\"add\" />\n              </form>\n            </div>\n          </Grid>\n        ))}\n      </Grid>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n    </SetupStep>\n  );\n};\n\nexport default PickTeamStep;\n","/Users/julian1729/Documents/LOCAL_SITES/jw-escape-room/src/components/GameManager.js",["136","137","138","139"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { useGameHost } from \"../contexts/GameHostContext\";\nimport Block from \"./Block\";\nimport { sharedStyles } from \"../theme\";\nimport { rdb } from \"../firebase\";\n\nconst useStyles = makeStyles(theme => ({\n  ...sharedStyles(theme)\n}));\n\nconst TeamStatus = ({ team }) => {\n  const classes = useStyles();\n  const { players } = useGameHost();\n\n  return (\n    <div className={classes.teamGroup}>\n      <Typography>\n        Players:\n        {Object.keys(players).map(id => {\n          const { name, team: teamId } = players[id];\n          if (teamId === team.id) {\n            return id === team.leader ? (\n              <strong> {name} </strong>\n            ) : (\n              <span> {name} </span>\n            );\n          }\n        })}\n      </Typography>\n    </div>\n  );\n};\n\nconst GameManager = ({}) => {\n  const [teams, setTeams] = useState({});\n\n  const { teamsRef } = useGameHost();\n\n  useEffect(() => {\n    // FIXME: this should be gotten from current state\n    // but it has to be mutated die to poor design\n    // get teams from rdb\n    teamsRef.once(\"value\", snapshot => setTeams(snapshot.val()));\n    teamsRef.on(\"child_changed\", snapshot =>\n      setTeams(prevState => ({\n        ...prevState,\n        [snapshot.getRef().getKey()]: snapshot.val()\n      }))\n    );\n  }, []);\n\n  return (\n    <Block>\n      {Object.keys(teams).map(teamId => (\n        <TeamStatus team={{ id: teamId, ...teams[teamId] }} />\n      ))}\n    </Block>\n  );\n};\n\nexport default GameManager;\n",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"144","severity":1,"message":"148","line":72,"column":17,"nodeType":"146","messageId":"147","endLine":72,"endColumn":22},{"ruleId":"140","replacedBy":"149"},{"ruleId":"142","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":43,"column":6,"nodeType":"153","endLine":43,"endColumn":8,"suggestions":"154"},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"156","line":41,"column":10,"nodeType":"146","messageId":"147","endLine":41,"endColumn":15},{"ruleId":"144","severity":1,"message":"157","line":41,"column":17,"nodeType":"146","messageId":"147","endLine":41,"endColumn":25},{"ruleId":"151","severity":1,"message":"158","line":47,"column":6,"nodeType":"153","endLine":47,"endColumn":8,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"160","line":97,"column":6,"nodeType":"153","endLine":97,"endColumn":13,"suggestions":"161"},{"ruleId":"144","severity":1,"message":"162","line":215,"column":9,"nodeType":"146","messageId":"147","endLine":215,"endColumn":25},{"ruleId":"144","severity":1,"message":"163","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"164","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":8,"column":24,"nodeType":"167","messageId":"168","endLine":8,"endColumn":26},{"ruleId":"144","severity":1,"message":"169","line":9,"column":11,"nodeType":"146","messageId":"147","endLine":9,"endColumn":22},{"ruleId":"144","severity":1,"message":"170","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":13},{"ruleId":"144","severity":1,"message":"171","line":13,"column":20,"nodeType":"146","messageId":"147","endLine":13,"endColumn":29},{"ruleId":"144","severity":1,"message":"164","line":14,"column":8,"nodeType":"146","messageId":"147","endLine":14,"endColumn":17},{"ruleId":"144","severity":1,"message":"172","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":13},{"ruleId":"151","severity":1,"message":"173","line":51,"column":6,"nodeType":"153","endLine":51,"endColumn":8,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"166","line":75,"column":19,"nodeType":"167","messageId":"168","endLine":75,"endColumn":21},{"ruleId":"144","severity":1,"message":"175","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":8,"column":24,"nodeType":"167","messageId":"168","endLine":8,"endColumn":26},{"ruleId":"144","severity":1,"message":"176","line":1,"column":50,"nodeType":"146","messageId":"147","endLine":1,"endColumn":56},{"ruleId":"151","severity":1,"message":"177","line":121,"column":6,"nodeType":"153","endLine":121,"endColumn":8,"suggestions":"178"},{"ruleId":"151","severity":1,"message":"179","line":128,"column":6,"nodeType":"153","endLine":128,"endColumn":13,"suggestions":"180"},{"ruleId":"144","severity":1,"message":"181","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"151","severity":1,"message":"182","line":51,"column":6,"nodeType":"153","endLine":51,"endColumn":21,"suggestions":"183"},{"ruleId":"144","severity":1,"message":"184","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"185","severity":1,"message":"186","line":22,"column":38,"nodeType":"187","messageId":"188","endLine":22,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":37,"column":22,"nodeType":"167","messageId":"168","endLine":37,"endColumn":24},{"ruleId":"151","severity":1,"message":"189","line":53,"column":6,"nodeType":"153","endLine":53,"endColumn":8,"suggestions":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'stage' is assigned a value but never used.",["191"],["192"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'findGame', 'gameId', and 'initRDBListeners'. Either include them or remove the dependency array.","ArrayExpression",["193"],"'useParams' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentPlayer.displayName'. Either include it or remove the dependency array. If 'setName' needs the current value of 'currentPlayer.displayName', you can also switch to useReducer instead of useState and read 'currentPlayer.displayName' in the reducer.",["194"],"React Hook useEffect has missing dependencies: 'entered' and 'game.scheduledTime.seconds'. Either include them or remove the dependency array.",["195"],"'fixedHeightPaper' is assigned a value but never used.","'Link' is defined but never used.","'GameSetup' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'currentUser' is assigned a value but never used.","'Title' is defined but never used.","'useStyles' is defined but never used.","'Block' is defined but never used.","React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array.",["196"],"'useContext' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'initGame'. Either include it or remove the dependency array.",["197"],"React Hook useEffect has a missing dependency: 'stageRef'. Either include it or remove the dependency array.",["198"],"'useDrop' is defined but never used.","React Hook useEffect has a missing dependency: 'setTeams'. Either include it or remove the dependency array.",["199"],"'rdb' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'teamsRef'. Either include it or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [findGame, gameId, initRDBListeners]",{"range":"217","text":"218"},"Update the dependencies array to be: [currentPlayer.displayName]",{"range":"219","text":"220"},"Update the dependencies array to be: [entered, game.scheduledTime.seconds, stage]",{"range":"221","text":"222"},"Update the dependencies array to be: [getGames]",{"range":"223","text":"224"},"Update the dependencies array to be: [initGame]",{"range":"225","text":"226"},"Update the dependencies array to be: [stage, stageRef]",{"range":"227","text":"228"},"Update the dependencies array to be: [numberOfTeams, setTeams]",{"range":"229","text":"230"},"Update the dependencies array to be: [teamsRef]",{"range":"231","text":"232"},[1272,1274],"[findGame, gameId, initRDBListeners]",[1321,1323],"[currentPlayer.displayName]",[2583,2590],"[entered, game.scheduledTime.seconds, stage]",[1595,1597],"[getGames]",[3489,3491],"[initGame]",[3602,3609],"[stage, stageRef]",[1444,1459],"[numberOfTeams, setTeams]",[1441,1443],"[teamsRef]"]